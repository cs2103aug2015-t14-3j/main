import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

public class Parser {
	
	String userInput;
	
	enum COMMAND_TYPE {
		ADD, DISPLAY, EDIT, DISPLAY_SPECIFIC, HELP, UNDO, DELETE, SEARCH, CLEAR, EXIT, INVALID
	}
	
	public Parser(String input) {
		userInput = input.trim();
	}
	
	COMMAND_TYPE getCommand () {
		if (userInput.contains("add")) {
			return COMMAND_TYPE.ADD;
		} else if (userInput.contains("delete")) {
			return COMMAND_TYPE.DELETE;
		} else if (userInput.contains("display on")) {
			return COMMAND_TYPE.DISPLAY_SPECIFIC;
		} else if (userInput.contains("display")) {
			return COMMAND_TYPE.DISPLAY;
		} else if (userInput.contains("edit")) {
			return COMMAND_TYPE.EDIT;
		} else if (userInput.contains("search")) {
			return COMMAND_TYPE.SEARCH;
		} else if (userInput.contains("undo")) {
			return COMMAND_TYPE.UNDO;
		} else if (userInput.contains("help")) {
			return COMMAND_TYPE.HELP;
		} 
		return COMMAND_TYPE.INVALID;
	} 
	
	String[] getSortedContent(COMMAND_TYPE command) {	
		userInput.replace(command.toString(),"");
		String[] sortedInput = sortContents(command,userInput);
		return sortedInput;
	}
	
	String[] sortContents(COMMAND_TYPE command, String contents) throws ParseException {
		// sort
		Date date = formatDate("");
		
		String[] arr = contents.split(" ");
		
		return arr;
	}
	
	Date formatDate(String date) throws ParseException {
		SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
		Date dateFormatted = format.parse(date); 
		return dateFormatted;
	}

}
